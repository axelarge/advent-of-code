b = 81              //  0  set b 81
c = b               //  1  set c b
if (a) {            //  2  jnz a 2
    b *= 100        //  4  mul b 100
    b += 100000     //  5  sub b -100000
    c = b           //  6  set c b
    c += 17000      //  7  sub c -17000
}
                    //  3  jnz 1 5

:entry
f = 1               //  8  set f 1
d = 2               //  9  set d 2

do {
    e = 2           // 10  set e 2
    do {
        g = d       // 11  set g d
        g *= e      // 12  mul g e
        g -= b      // 13  sub g b
        if (!g) {   // 14  jnz g 2
            f = 0   // 15  set f 0
        }
        e++         // 16  sub e -1
        g = e       // 17  set g e
        g -= b      // 18  sub g b
    } while (g)     // 19  jnz g -8
    d++             // 20  sub d -1
    g = d           // 21  set g d
    g -= b          // 22  sub g b
} while (g)         // 23  jnz g -13

if (!f) {           // 24  jnz f 2
    h++             // 25  sub h -1
}

g = b               // 26  set g b
g -= c              // 27  sub g c
if (!g) {           // 28  jnz g 2
    exit            // 29  jnz 1 3
}
b += 17             // 30  sub b -17

goto :entry         // 31  jnz 1 -23
